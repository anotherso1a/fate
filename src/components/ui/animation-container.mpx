<template>
  <view class="animation-container-wrapper {{classname}}" bindtap="clickLayer">
    <view class="animation-container-content {{animationType}}">
      <view catchtap="prevent"><slot></slot></view>
    </view>
    <view class="animation-container-layer"></view>
  </view>
</template>
<script>
import { createComponent } from '@mpxjs/core'
createComponent({
  properties: {
    animationType: String, // scale-back scale-down right-left ''
    disabledCloseAnimation: Boolean
  },
  data: {
    isShow: null
  },
  computed: {
    classname (){
      return this.isShow === true
        ? 'isShow'
        : this.isShow === false
          ? 'isHide'
          : ''
    }
  },
  methods: {
    show (){
      this.isShow = true
    },
    hide (){
      this.isShow = this.disabledCloseAnimation ? null : false
    },
    prevent (){},
    clickLayer (){
      this.triggerEvent('clicklayer')
    }
  }
})
</script>
<style lang="stylus">
.animation-container-wrapper
  position: fixed
  top: 0
  left: 0
  width: 100%
  height: 100%
  transform: translateX(-100%)
  overflow: hidden
  z-index: 99999
  &.isShow
    transform: translateX(0)
    .animation-container-content.scale-back, .animation-container-content.scale-down
      animation: mpx-animation-container-scale .3s linear both
    .animation-container-content.right-left // 从右进，向左出
      animation: mpx-animation-container-right .3s linear both
    .animation-container-layer
      opacity: 1
  &.isHide
    animation: mpx-animation-container-hide .31s linear both
    .animation-container-content.scale-back
      animation: mpx-animation-container-minscale .3s linear both
    .animation-container-content.scale-down
      animation: mpx-animation-container-down .3s linear both
    .animation-container-content.right-left
      animation: mpx-animation-container-left .3s linear both
    .animation-container-layer
      opacity: 0
  .animation-container-content
    position: absolute
    top: 0
    left: 0
    width: 100%
    height: 100%
  .animation-container-layer
    position: absolute
    top: 0
    left: 0
    height: 100%
    width: 100%
    z-index: -1
    background-color: rgba(37, 38, 45, 0.4)
    transition: all .3s linear
    backface-visibility: hidden

  @-webkit-keyframes mpx-animation-container-hide {
    0% {
      transform: translateX(0)
    }
    99% {
      transform: translateX(0)
    }
    100% {
      transform: translateX(-100%)
    }
  }

  @-webkit-keyframes mpx-animation-container-scale {
    0% {
      transform: scale(.9)
    }
    70% {
      transform: scale(1.1)
    }
    100% {
      transform: scale(1)
    }
  }

  @-webkit-keyframes mpx-animation-container-minscale {
    0% {
      transform: scale(1)
    }
    100% {
      transform: scale(0)
    }
  }

  @-webkit-keyframes mpx-animation-container-down {
    from {
      transform: translateY(0)
    }
    to {
      transform: translateY(100%)
    }
  }

  @-webkit-keyframes mpx-animation-container-right {
    from {
      transform: translateX(-100%)
    }
    to {
      transform: translateX(0)
    }
  }

  @-webkit-keyframes mpx-animation-container-left {
    from {
      transform: translateX(0)
    }
    to {
      transform: translateX(-100%)
    }
  }
</style>
<script type="application/json">
  {
    "component": true
  }
</script>
